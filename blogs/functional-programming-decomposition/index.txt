1:HL["/_next/static/media/2aaf0723e720e8b9-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/fe8a796665f10359.css",{"as":"style"}]
0:[[["",{"children":["blogs",{"children":[["slug","functional-programming-decomposition","d"],{"children":["__PAGE__?{\"slug\":\"functional-programming-decomposition\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/fe8a796665f10359.css","precedence":"next"}]],["$L4",["$","meta",null,{"name":"next-size-adjust"}]]]]]
5:HL["/_next/static/css/2fd3c970a312a5ab.css",{"as":"style"}]
6:I{"id":"5034","chunks":["519:static/chunks/519-a3b077c6f8d3e235.js","49:static/chunks/49-aaf7e9eaea2df6f0.js","215:static/chunks/215-778e6a8571e20536.js","861:static/chunks/861-51134c186efb5132.js","17:static/chunks/17-be20e367e8a4b979.js","877:static/chunks/877-d3eb9241e1106165.js","198:static/chunks/198-170cda3e949c7f24.js","918:static/chunks/918-b951c540ee28c158.js","185:static/chunks/app/layout-aca02054d807d67c.js"],"name":"","async":false}
7:I{"id":"4513","chunks":["519:static/chunks/519-a3b077c6f8d3e235.js","49:static/chunks/49-aaf7e9eaea2df6f0.js","215:static/chunks/215-778e6a8571e20536.js","861:static/chunks/861-51134c186efb5132.js","17:static/chunks/17-be20e367e8a4b979.js","1:static/chunks/1-e7ecfedc4d37742a.js","688:static/chunks/app/blogs/[slug]/page-f1a11f58620b0c94.js"],"name":"","async":false}
8:I{"id":"3336","chunks":["519:static/chunks/519-a3b077c6f8d3e235.js","49:static/chunks/49-aaf7e9eaea2df6f0.js","215:static/chunks/215-778e6a8571e20536.js","861:static/chunks/861-51134c186efb5132.js","17:static/chunks/17-be20e367e8a4b979.js","877:static/chunks/877-d3eb9241e1106165.js","198:static/chunks/198-170cda3e949c7f24.js","918:static/chunks/918-b951c540ee28c158.js","185:static/chunks/app/layout-aca02054d807d67c.js"],"name":"","async":false}
9:I{"id":"3791","chunks":["272:static/chunks/webpack-a63089cf6bf00751.js","802:static/chunks/f2e3bb05-98d58b5180d8bf6e.js","664:static/chunks/664-10d7fc4ddae56491.js"],"name":"","async":false}
a:I{"id":"9877","chunks":["272:static/chunks/webpack-a63089cf6bf00751.js","802:static/chunks/f2e3bb05-98d58b5180d8bf6e.js","664:static/chunks/664-10d7fc4ddae56491.js"],"name":"","async":false}
c:I{"id":"1978","chunks":["519:static/chunks/519-a3b077c6f8d3e235.js","49:static/chunks/49-aaf7e9eaea2df6f0.js","215:static/chunks/215-778e6a8571e20536.js","861:static/chunks/861-51134c186efb5132.js","17:static/chunks/17-be20e367e8a4b979.js","877:static/chunks/877-d3eb9241e1106165.js","198:static/chunks/198-170cda3e949c7f24.js","918:static/chunks/918-b951c540ee28c158.js","185:static/chunks/app/layout-aca02054d807d67c.js"],"name":"","async":false}
3:[["$","html",null,{"lang":"en","children":[["$","$L6",null,{"async":true,"src":"https://www.googletagmanager.com/gtag/js?id=UA-171631214-1"}],["$","$L6",null,{"id":"google-analytics","strategy":"afterInteractive","children":"window.dataLayer = window.dataLayer || [];\n        function gtag() {\n          dataLayer.push(arguments);\n        }\n        gtag(\"js\", new Date());\n  \n        gtag(\"config\", \"UA-171631214-1\");\n        "}],["$","$L6",null,{"data-ad-client":"ca-pub-4302795410966209","async":true,"src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"}],["$","body",null,{"children":["$","$L7",null,{"children":[["$","$L8",null,{}],["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blogs","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blogs","children",["slug","functional-programming-decomposition","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$La",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","asNotFound":"$undefined","childProp":{"current":["$Lb",null],"segment":"__PAGE__?{\"slug\":\"functional-programming-decomposition\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2fd3c970a312a5ab.css","precedence":"next"}]]}],"segment":["slug","functional-programming-decomposition","d"]},"styles":[]}],"segment":"blogs"},"styles":[]}],["$","$Lc",null,{}]]}]}]]}],null]
4:[[["$","meta",null,{"charSet":"utf-8"}],["$","title",null,{"children":"Functional Programming - Decomposition"}],["$","meta",null,{"name":"description","content":"Decomposition is the process of breaking complex task into smaller simple tasks."}],null,[[["$","link",null,{"rel":"author","href":"https://github.com/nishantpainter"}],["$","meta",null,{"name":"author","content":"Nishant Painter"}]]],null,null,null,null,null,null,["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],null,null,null,null,null,null,null,null,["$","meta",null,{"name":"category","content":"technology"}],null,[]],[null,null,null,null],null,null,[null,null,null,null,null],null,[null,["$","meta",null,{"property":"og:title","content":"Functional Programming - Decomposition"}],["$","meta",null,{"property":"og:description","content":"Decomposition is the process of breaking complex task into smaller simple tasks."}],["$","meta",null,{"property":"og:url","content":"https://nishantpainter.com//blogs/functional-programming-decomposition"}],null,null,null,null,[[["$","meta",null,{"property":"og:image","content":"https://nishantpainter.com/img/og/functional-programming-decomposition.png"}]]],null,null,null,null,null,null,[["$","meta",null,{"property":"og:type","content":"article"}],null,null,null,null,null,null]],[["$","meta",null,{"name":"twitter:card","content":"summary_large_image"}],null,null,null,null,["$","meta",null,{"name":"twitter:title","content":"Functional Programming - Decomposition"}],["$","meta",null,{"name":"twitter:description","content":"Decomposition is the process of breaking complex task into smaller simple tasks."}],[[["$","meta",null,{"name":"twitter:image","content":"https://nishantpainter.com/img/og/functional-programming-decomposition.png"}]]],null,null],null,[null,[["$","link",null,{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"any"}]],[],null]]
d:I{"id":"6831","chunks":["519:static/chunks/519-a3b077c6f8d3e235.js","49:static/chunks/49-aaf7e9eaea2df6f0.js","215:static/chunks/215-778e6a8571e20536.js","861:static/chunks/861-51134c186efb5132.js","17:static/chunks/17-be20e367e8a4b979.js","1:static/chunks/1-e7ecfedc4d37742a.js","688:static/chunks/app/blogs/[slug]/page-f1a11f58620b0c94.js"],"name":"","async":false}
b:["$","$Ld",null,{"blog":{"title":"Functional Programming - Decomposition","date":"$D2023-06-23T00:00:00.000Z","content":"\n# Decomposition\n\nDecomposition is the process of breaking complex task into smaller simpler tasks. It makes it easier to understand, manage and extend the software over a period of time. These smaller steps will be then combined and deliver a complete solution.\n\nIn example below we are stimulating asynchronous request call to fetch data and breaking the response handler into smaller tasks with distinguished purpose. \n\nWe implemented a `transformation` and `filtering` handler to process the response instead of one single handler to do all the work.\n\n```\nconst stimulatePromise = (value = [], timeout = 1500) => {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      res(value);\n    }, timeout);\n  });\n};\n\nconst filterResponse = (response) => response.filter((i) => true);\n\nconst transformResponse = (response) => response.map((i) => i);\n\nconst fetchData = () => stimulatePromise();\n\nfetchData().then(filterResponse).then(transformResponse);\n```\n","categories":["Programming","Functional Programming"]}}]
